name: deploy to kafka broker

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-northeast-2
      APP_NAME: datalake-deploy            # CodeDeploy 애플리케이션
      GROUP_NAME: kafka-deploy             # 배포그룹
      BKT: datalake-actions-deploy-siw     # S3 버킷
      KEY: kafka-producer/kafka-producer.tar.gz
      SERVICE_ROLE_ARN: arn:aws:iam::<ACCOUNT_ID>:role/CodeDeployServiceRole  # ← 본인 역할 ARN로 교체
      EC2_TAG_KEY: Name
      EC2_TAG_VAL: kafka-producer          # ← 대상 EC2 태그 값

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: archive to tar.gz
      run: |
        tar cvfz kafka-producer.tar.gz --exclude .git --exclude .github *

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: who am i
      run: |
        aws sts get-caller-identity        # 계정 확인
        aws configure list                 # 리전 확인

    - name: upload to S3
      run: |
        aws s3 cp ./kafka-producer.tar.gz s3://$BKT/$KEY --region $AWS_REGION
        aws s3 ls s3://$BKT/$KEY --region $AWS_REGION  # 업로드 확인

    - name: ensure CodeDeploy app/group exist (upsert)
      run: |
        set -e
        # 앱 확인/생성
        if ! aws deploy get-application --application-name "$APP_NAME" --region $AWS_REGION >/dev/null 2>&1; then
          aws deploy create-application \
            --application-name "$APP_NAME" \
            --compute-platform Server \
            --region $AWS_REGION
        fi
        # 배포그룹 확인/생성
        if ! aws deploy get-deployment-group \
             --application-name "$APP_NAME" \
             --deployment-group-name "$GROUP_NAME" \
             --region $AWS_REGION >/dev/null 2>&1; then
          aws deploy create-deployment-group \
            --application-name "$APP_NAME" \
            --deployment-group-name "$GROUP_NAME" \
            --service-role-arn "$SERVICE_ROLE_ARN" \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --ec2-tag-filters Key=$EC2_TAG_KEY,Value=$EC2_TAG_VAL,Type=KEY_AND_VALUE \
            --region $AWS_REGION
        fi

    - name: deploy with AWS CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name "$APP_NAME" \
          --deployment-group-name "$GROUP_NAME" \
          --s3-location bucket=$BKT,bundleType=tgz,key=$KEY \
          --region $AWS_REGION
